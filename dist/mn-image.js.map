{"version":3,"sources":["scripts/mn-image.class.js"],"names":["MnImage","self","_this","_ret","_classCallCheck","this","setImage","_possibleConstructorReturn","setRotation3d","event","bounds","getBoundingClientRect","percentX","clientX","left","width","percentY","clientY","top","height","angles","rotateY","rotateX","style","transform","unsetRotate3d","setAttribute","attribute","isDefaultAttribute","hasOwnProperty","attributeValue","element","getAttribute","name","isValidValue","values","indexOf","value","default","image","attributes","document","createElement","map","appendChild","addEventListener","HTMLElement","customElements","define"],"mappings":"sxCAAMA,QAAAA,SAAAA,cACJ,QAAAA,SAAYC,MAAM,GAAAC,OAAAC,IAGhB,OAHgBC,iBAAAC,KAAAL,SAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,QAAAA,WAAAA,OAAAA,eAAAA,UAAAA,KAAAA,KAAaA,OACbC,MAAKI,WACLH,KAAOF,KAAPM,2BAAAL,MAAAC,oGAyBA,QAASK,eAAcC,OACrB,GAAIC,QAASL,KAAKM,wBACdC,UAAYH,MAAMI,QAAUH,OAAOI,MAAQJ,OAAOK,MAClDC,UAAYP,MAAMQ,QAAUP,OAAOQ,KAAOR,OAAOS,OACjDC,OAAS,GACTC,QAAWD,QAAsB,GAAXR,UAAiBQ,OACvCE,QAAWF,QAAqB,EAAXJ,UAAiBI,MAC1Cf,MAAKkB,MAAMC,UAAX,uEAGYH,QAHZ,yBAIYC,QAJZ,eAQF,QAASG,iBACPpB,KAAKkB,MAAMC,UAAY,GAGzB,QAASE,cAAaC,WACpB,GAAIC,oBAAqBD,UAAUE,eAAe,WAC9CC,eAAiBC,QAAQC,aAAaL,UAAUM,KAEpD,IAAIL,mBAAoB,CACtB,GAAIM,cAAeP,UAAUE,eAAe,WACvCF,UAAUQ,OAAOC,QAAQN,iBAAmB,EAE7CO,MAAQH,aACRJ,eACAH,UAAUW,OAEdC,OAAMb,aAAaC,UAAUM,KAAMI,WAC1BP,iBACTS,MAAMb,aAAaC,UAAUM,KAAMH,gBAtDvC,GAAIC,SAAU1B,KACVmC,aAEAP,KAAM,QAGNA,KAAM,QAKNM,MAAQE,SAASC,cAAc,MACnCF,YAAWG,IAAIjB,cACfrB,KAAKuC,YAAYL,OAEjBlC,KAAKwC,iBAAiB,aAAcrC,eACpCH,KAAKwC,iBAAiB,YAAarC,eACnCH,KAAKwC,iBAAiB,aAAcrC,eACpCH,KAAKwC,iBAAiB,YAAarC,eACnCH,KAAKwC,iBAAiB,WAAYpB,4BA3BhBqB,YAoEtBC,gBAAeC,OAAO,WAAYhD","file":"mn-image.js","sourcesContent":["class MnImage extends HTMLElement {\n  constructor(self) {\n    self = super(self);\n    this.setImage();\n    return self;\n  }\n\n  setImage() {\n    let element = this;\n    let attributes = [\n      {\n        name: 'src',\n      },\n      {\n        name: 'alt',\n      },\n    ];\n\n    // image element\n    let image = document.createElement('img');\n    attributes.map(setAttribute);\n    this.appendChild(image);\n\n    this.addEventListener('mouseenter', setRotation3d);\n    this.addEventListener('mousemove', setRotation3d);\n    this.addEventListener('touchstart', setRotation3d);\n    this.addEventListener('touchmove', setRotation3d);\n    this.addEventListener('mouseout', unsetRotate3d);\n\n    function setRotation3d(event) {\n      let bounds = this.getBoundingClientRect();\n      let percentX = (event.clientX - bounds.left) / bounds.width;\n      let percentY = (event.clientY - bounds.top) / bounds.height;\n      let angles = 20;\n      let rotateY = (angles * (-percentX * 2)) + angles;\n      let rotateX = (angles * (percentY * 2)) - angles;\n      this.style.transform = `\n        scale(1.07)\n        perspective(1000px)\n        rotateY(${rotateY}deg)\n        rotateX(${rotateX}deg)\n      `;\n    }\n\n    function unsetRotate3d() {\n      this.style.transform = '';\n    }\n\n    function setAttribute(attribute) {\n      let isDefaultAttribute = attribute.hasOwnProperty('default');\n      let attributeValue = element.getAttribute(attribute.name);\n\n      if (isDefaultAttribute) {\n        let isValidValue = attribute.hasOwnProperty('values')\n          && attribute.values.indexOf(attributeValue) >= 0;\n\n        let value = isValidValue\n          ? attributeValue\n          : attribute.default;\n\n        image.setAttribute(attribute.name, value);\n      } else if (attributeValue) {\n        image.setAttribute(attribute.name, attributeValue);\n      }\n    }\n  }\n}\n\ncustomElements.define('mn-image', MnImage);\n"],"sourceRoot":"/source/"}