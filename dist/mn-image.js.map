{"version":3,"sources":["scripts/mn-image.class.js"],"names":["MnImage","self","_this","_ret","_classCallCheck","this","setImage","setOutline","setRotation","setBlur","_possibleConstructorReturn","parentElement","tagName","classList","add","setAttribute","attribute","isDefaultAttribute","hasOwnProperty","attributeValue","element","getAttribute","name","isValidValue","values","indexOf","value","default","image","attributes","document","createElement","map","appendChild","setRotation3d","event","bounds","getBoundingClientRect","isTouchEvent","type","startsWith","clientX","touches","clientY","percentX","left","width","percentY","top","height","angles","rotateY","rotateX","style","transform","unsetRotate3d","addEventListener","blur","HTMLElement","customElements","define"],"mappings":"sxCAAMA,QAAAA,SAAAA,cACJ,QAAAA,SAAYC,MAAM,GAAAC,OAAAC,IAMhB,OANgBC,iBAAAC,KAAAL,SAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,QAAAA,WAAAA,OAAAA,eAAAA,UAAAA,KAAAA,KAAaA,OACbC,MAAKI,WACLJ,MAAKK,aACLL,MAAKM,cACLN,MAAKO,UACLN,KAAOF,KAAPS,2BAAAR,MAAAC,sGAImC,MAA/BE,KAAKM,cAAcC,SACrBP,KAAKM,cAAcE,UAAUC,IAAI,iDA0BnC,QAASC,cAAaC,WACpB,GAAIC,oBAAqBD,UAAUE,eAAe,WAC9CC,eAAiBC,QAAQC,aAAaL,UAAUM,KAEpD,IAAIL,mBAAoB,CACtB,GAAIM,cAAeP,UAAUE,eAAe,WACvCF,UAAUQ,OAAOC,QAAQN,iBAAmB,EAE7CO,MAAQH,aACRJ,eACAH,UAAUW,OAEdC,OAAMb,aAAaC,UAAUM,KAAMI,WAC1BP,iBACTS,MAAMb,aAAaC,UAAUM,KAAMH,gBAnCvC,GAAIC,SAAUf,KACVwB,aAEAP,KAAM,QAGNA,KAAM,QAGNA,KAAM,UAGNA,KAAM,cAKNM,MAAQE,SAASC,cAAc,MACnCF,YAAWG,IAAIjB,cACfV,KAAK4B,YAAYL,6CA0BjB,QAASM,eAAcC,OACrB,GAAmC,MAA/B9B,KAAKM,cAAcC,QAAiB,CACtC,GAAIwB,QAAS/B,KAAKgC,wBACdC,aAAeH,MAAMI,KAAKC,WAAW,SAErCC,QAAUH,aACVH,MAAMO,QAAQ,GAAGD,QACjBN,MAAMM,QAENE,QAAUL,aACVH,MAAMO,QAAQ,GAAGC,QACjBR,MAAMQ,QAENC,UAAYH,QAAUL,OAAOS,MAAQT,OAAOU,MAC5CC,UAAYJ,QAAUP,OAAOY,KAAOZ,OAAOa,OAC3CC,OAAS,GACTC,QAAWD,QAAsB,GAAXN,UAAiBM,OACvCE,QAAWF,QAAqB,EAAXH,UAAiBG,MAC1C7C,MAAKgD,MAAMC,UAAX,6EAGYH,QAHZ,2BAIYC,QAJZ,kBASJ,QAASG,iBACPlD,KAAKgD,MAAMC,UAAY,GAhCzBjD,KAAKmD,iBAAiB,aAActB,eACpC7B,KAAKmD,iBAAiB,YAAatB,eACnC7B,KAAKmD,iBAAiB,WAAYD,iDAyClC,QAASE,QACPpD,KAAKoD,OAP4B,MAA/BpD,KAAKM,cAAcC,UACrBP,KAAKM,cAAc6C,iBAAiB,QAASC,MAC7CpD,KAAKM,cAAc6C,iBAAiB,aAAcC,MAClDpD,KAAKM,cAAc6C,iBAAiB,YAAaC,oBAlGjCC,YA2GtBC,gBAAeC,OAAO,WAAY5D","file":"mn-image.js","sourcesContent":["class MnImage extends HTMLElement {\n  constructor(self) {\n    self = super(self);\n    this.setImage();\n    this.setOutline();\n    this.setRotation();\n    this.setBlur();\n    return self;\n  }\n\n  setOutline() {\n    if (this.parentElement.tagName === 'A') {\n      this.parentElement.classList.add('no-outline');\n    }\n  }\n\n  setImage() {\n    let element = this;\n    let attributes = [\n      {\n        name: 'src',\n      },\n      {\n        name: 'alt',\n      },\n      {\n        name: 'title',\n      },\n      {\n        name: 'draggable',\n      },\n    ];\n\n    // image element\n    let image = document.createElement('img');\n    attributes.map(setAttribute);\n    this.appendChild(image);\n\n    function setAttribute(attribute) {\n      let isDefaultAttribute = attribute.hasOwnProperty('default');\n      let attributeValue = element.getAttribute(attribute.name);\n\n      if (isDefaultAttribute) {\n        let isValidValue = attribute.hasOwnProperty('values')\n          && attribute.values.indexOf(attributeValue) >= 0;\n\n        let value = isValidValue\n          ? attributeValue\n          : attribute.default;\n\n        image.setAttribute(attribute.name, value);\n      } else if (attributeValue) {\n        image.setAttribute(attribute.name, attributeValue);\n      }\n    }\n  }\n\n  setRotation() {\n    this.addEventListener('mouseenter', setRotation3d);\n    this.addEventListener('mousemove', setRotation3d);\n    this.addEventListener('mouseout', unsetRotate3d);\n\n    function setRotation3d(event) {\n      if (this.parentElement.tagName === 'A') {\n        let bounds = this.getBoundingClientRect();\n        let isTouchEvent = event.type.startsWith('touch');\n\n        let clientX = isTouchEvent\n          ? event.touches[0].clientX\n          : event.clientX;\n\n        let clientY = isTouchEvent\n          ? event.touches[0].clientY\n          : event.clientY;\n\n        let percentX = (clientX - bounds.left) / bounds.width;\n        let percentY = (clientY - bounds.top) / bounds.height;\n        let angles = 20;\n        let rotateY = (angles * (-percentX * 2)) + angles;\n        let rotateX = (angles * (percentY * 2)) - angles;\n        this.style.transform = `\n          scale(1.07)\n          perspective(1000px)\n          rotateY(${rotateY}deg)\n          rotateX(${rotateX}deg)\n        `;\n      }\n    }\n\n    function unsetRotate3d() {\n      this.style.transform = '';\n    }\n  }\n\n  setBlur() {\n    if (this.parentElement.tagName === 'A') {\n      this.parentElement.addEventListener('click', blur);\n      this.parentElement.addEventListener('mouseleave', blur);\n      this.parentElement.addEventListener('touchmove', blur);\n    }\n\n    function blur() {\n      this.blur();\n    }\n  }\n}\n\ncustomElements.define('mn-image', MnImage);\n"],"sourceRoot":"/source/"}